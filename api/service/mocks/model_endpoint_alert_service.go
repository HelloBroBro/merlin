// Code generated by mockery v2.0.4. DO NOT EDIT.

package mocks

import (
	models "github.com/gojek/merlin/models"
	mock "github.com/stretchr/testify/mock"
)

// ModelEndpointAlertService is an autogenerated mock type for the ModelEndpointAlertService type
type ModelEndpointAlertService struct {
	mock.Mock
}

// CreateModelEndpointAlert provides a mock function with given fields: user, alert
func (_m *ModelEndpointAlertService) CreateModelEndpointAlert(user string, alert *models.ModelEndpointAlert) (*models.ModelEndpointAlert, error) {
	ret := _m.Called(user, alert)

	var r0 *models.ModelEndpointAlert
	if rf, ok := ret.Get(0).(func(string, *models.ModelEndpointAlert) *models.ModelEndpointAlert); ok {
		r0 = rf(user, alert)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ModelEndpointAlert)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, *models.ModelEndpointAlert) error); ok {
		r1 = rf(user, alert)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetModelEndpointAlert provides a mock function with given fields: modelId, modelEndpointId
func (_m *ModelEndpointAlertService) GetModelEndpointAlert(modelId models.Id, modelEndpointId models.Id) (*models.ModelEndpointAlert, error) {
	ret := _m.Called(modelId, modelEndpointId)

	var r0 *models.ModelEndpointAlert
	if rf, ok := ret.Get(0).(func(models.Id, models.Id) *models.ModelEndpointAlert); ok {
		r0 = rf(modelId, modelEndpointId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ModelEndpointAlert)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.Id, models.Id) error); ok {
		r1 = rf(modelId, modelEndpointId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListModelAlerts provides a mock function with given fields: modelId
func (_m *ModelEndpointAlertService) ListModelAlerts(modelId models.Id) ([]*models.ModelEndpointAlert, error) {
	ret := _m.Called(modelId)

	var r0 []*models.ModelEndpointAlert
	if rf, ok := ret.Get(0).(func(models.Id) []*models.ModelEndpointAlert); ok {
		r0 = rf(modelId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.ModelEndpointAlert)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.Id) error); ok {
		r1 = rf(modelId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTeams provides a mock function with given fields:
func (_m *ModelEndpointAlertService) ListTeams() ([]string, error) {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateModelEndpointAlert provides a mock function with given fields: user, alert
func (_m *ModelEndpointAlertService) UpdateModelEndpointAlert(user string, alert *models.ModelEndpointAlert) (*models.ModelEndpointAlert, error) {
	ret := _m.Called(user, alert)

	var r0 *models.ModelEndpointAlert
	if rf, ok := ret.Get(0).(func(string, *models.ModelEndpointAlert) *models.ModelEndpointAlert); ok {
		r0 = rf(user, alert)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ModelEndpointAlert)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, *models.ModelEndpointAlert) error); ok {
		r1 = rf(user, alert)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
