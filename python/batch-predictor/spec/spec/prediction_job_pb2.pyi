# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    Mapping as typing___Mapping,
    MutableMapping as typing___MutableMapping,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
    overload as typing___overload,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

ResultTypeValue = typing___NewType('ResultTypeValue', builtin___int)
type___ResultTypeValue = ResultTypeValue
ResultType: _ResultType
class _ResultType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ResultTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DOUBLE = typing___cast(ResultTypeValue, 0)
    FLOAT = typing___cast(ResultTypeValue, 1)
    INTEGER = typing___cast(ResultTypeValue, 2)
    LONG = typing___cast(ResultTypeValue, 3)
    STRING = typing___cast(ResultTypeValue, 4)
    ARRAY = typing___cast(ResultTypeValue, 10)
DOUBLE = typing___cast(ResultTypeValue, 0)
FLOAT = typing___cast(ResultTypeValue, 1)
INTEGER = typing___cast(ResultTypeValue, 2)
LONG = typing___cast(ResultTypeValue, 3)
STRING = typing___cast(ResultTypeValue, 4)
ARRAY = typing___cast(ResultTypeValue, 10)
type___ResultType = ResultType

ModelTypeValue = typing___NewType('ModelTypeValue', builtin___int)
type___ModelTypeValue = ModelTypeValue
ModelType: _ModelType
class _ModelType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ModelTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    INVALID_MODEL_TYPE = typing___cast(ModelTypeValue, 0)
    XGBOOST = typing___cast(ModelTypeValue, 1)
    TENSORFLOW = typing___cast(ModelTypeValue, 2)
    SKLEARN = typing___cast(ModelTypeValue, 3)
    PYTORCH = typing___cast(ModelTypeValue, 4)
    ONNX = typing___cast(ModelTypeValue, 5)
    PYFUNC = typing___cast(ModelTypeValue, 6)
    PYFUNC_V2 = typing___cast(ModelTypeValue, 7)
INVALID_MODEL_TYPE = typing___cast(ModelTypeValue, 0)
XGBOOST = typing___cast(ModelTypeValue, 1)
TENSORFLOW = typing___cast(ModelTypeValue, 2)
SKLEARN = typing___cast(ModelTypeValue, 3)
PYTORCH = typing___cast(ModelTypeValue, 4)
ONNX = typing___cast(ModelTypeValue, 5)
PYFUNC = typing___cast(ModelTypeValue, 6)
PYFUNC_V2 = typing___cast(ModelTypeValue, 7)
type___ModelType = ModelType

FileFormatValue = typing___NewType('FileFormatValue', builtin___int)
type___FileFormatValue = FileFormatValue
FileFormat: _FileFormat
class _FileFormat(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[FileFormatValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    INVALID_FILE_FORMAT = typing___cast(FileFormatValue, 0)
    CSV = typing___cast(FileFormatValue, 1)
    PARQUET = typing___cast(FileFormatValue, 2)
    AVRO = typing___cast(FileFormatValue, 3)
    JSON = typing___cast(FileFormatValue, 4)
INVALID_FILE_FORMAT = typing___cast(FileFormatValue, 0)
CSV = typing___cast(FileFormatValue, 1)
PARQUET = typing___cast(FileFormatValue, 2)
AVRO = typing___cast(FileFormatValue, 3)
JSON = typing___cast(FileFormatValue, 4)
type___FileFormat = FileFormat

SaveModeValue = typing___NewType('SaveModeValue', builtin___int)
type___SaveModeValue = SaveModeValue
SaveMode: _SaveMode
class _SaveMode(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SaveModeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ERRORIFEXISTS = typing___cast(SaveModeValue, 0)
    OVERWRITE = typing___cast(SaveModeValue, 1)
    APPEND = typing___cast(SaveModeValue, 2)
    IGNORE = typing___cast(SaveModeValue, 3)
    ERROR = typing___cast(SaveModeValue, 4)
ERRORIFEXISTS = typing___cast(SaveModeValue, 0)
OVERWRITE = typing___cast(SaveModeValue, 1)
APPEND = typing___cast(SaveModeValue, 2)
IGNORE = typing___cast(SaveModeValue, 3)
ERROR = typing___cast(SaveModeValue, 4)
type___SaveMode = SaveMode

class PredictionJob(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    version: typing___Text = ...
    kind: typing___Text = ...
    name: typing___Text = ...

    @property
    def bigquery_source(self) -> type___BigQuerySource: ...

    @property
    def gcs_source(self) -> type___GcsSource: ...

    @property
    def model(self) -> type___Model: ...

    @property
    def bigquery_sink(self) -> type___BigQuerySink: ...

    @property
    def gcs_sink(self) -> type___GcsSink: ...

    def __init__(self,
        *,
        version : typing___Optional[typing___Text] = None,
        kind : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        bigquery_source : typing___Optional[type___BigQuerySource] = None,
        gcs_source : typing___Optional[type___GcsSource] = None,
        model : typing___Optional[type___Model] = None,
        bigquery_sink : typing___Optional[type___BigQuerySink] = None,
        gcs_sink : typing___Optional[type___GcsSink] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"bigquery_sink",b"bigquery_sink",u"bigquery_source",b"bigquery_source",u"gcs_sink",b"gcs_sink",u"gcs_source",b"gcs_source",u"model",b"model",u"sink",b"sink",u"source",b"source"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bigquery_sink",b"bigquery_sink",u"bigquery_source",b"bigquery_source",u"gcs_sink",b"gcs_sink",u"gcs_source",b"gcs_source",u"kind",b"kind",u"model",b"model",u"name",b"name",u"sink",b"sink",u"source",b"source",u"version",b"version"]) -> None: ...
    @typing___overload
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"sink",b"sink"]) -> typing_extensions___Literal["bigquery_sink","gcs_sink"]: ...
    @typing___overload
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"source",b"source"]) -> typing_extensions___Literal["bigquery_source","gcs_source"]: ...
type___PredictionJob = PredictionJob

class BigQuerySource(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class OptionsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...
        value: typing___Text = ...

        def __init__(self,
            *,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> None: ...
    type___OptionsEntry = OptionsEntry

    table: typing___Text = ...
    features: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    @property
    def options(self) -> typing___MutableMapping[typing___Text, typing___Text]: ...

    def __init__(self,
        *,
        table : typing___Optional[typing___Text] = None,
        features : typing___Optional[typing___Iterable[typing___Text]] = None,
        options : typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"features",b"features",u"options",b"options",u"table",b"table"]) -> None: ...
type___BigQuerySource = BigQuerySource

class GcsSource(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class OptionsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...
        value: typing___Text = ...

        def __init__(self,
            *,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> None: ...
    type___OptionsEntry = OptionsEntry

    format: type___FileFormatValue = ...
    uri: typing___Text = ...
    features: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    @property
    def options(self) -> typing___MutableMapping[typing___Text, typing___Text]: ...

    def __init__(self,
        *,
        format : typing___Optional[type___FileFormatValue] = None,
        uri : typing___Optional[typing___Text] = None,
        features : typing___Optional[typing___Iterable[typing___Text]] = None,
        options : typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"features",b"features",u"format",b"format",u"options",b"options",u"uri",b"uri"]) -> None: ...
type___GcsSource = GcsSource

class Model(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class OptionsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...
        value: typing___Text = ...

        def __init__(self,
            *,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> None: ...
    type___OptionsEntry = OptionsEntry

    class ModelResult(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        type: type___ResultTypeValue = ...
        item_type: type___ResultTypeValue = ...

        def __init__(self,
            *,
            type : typing___Optional[type___ResultTypeValue] = None,
            item_type : typing___Optional[type___ResultTypeValue] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"item_type",b"item_type",u"type",b"type"]) -> None: ...
    type___ModelResult = ModelResult

    type: type___ModelTypeValue = ...
    uri: typing___Text = ...

    @property
    def result(self) -> type___Model.ModelResult: ...

    @property
    def options(self) -> typing___MutableMapping[typing___Text, typing___Text]: ...

    def __init__(self,
        *,
        type : typing___Optional[type___ModelTypeValue] = None,
        uri : typing___Optional[typing___Text] = None,
        result : typing___Optional[type___Model.ModelResult] = None,
        options : typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"result",b"result"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"options",b"options",u"result",b"result",u"type",b"type",u"uri",b"uri"]) -> None: ...
type___Model = Model

class BigQuerySink(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class OptionsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...
        value: typing___Text = ...

        def __init__(self,
            *,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> None: ...
    type___OptionsEntry = OptionsEntry

    table: typing___Text = ...
    staging_bucket: typing___Text = ...
    result_column: typing___Text = ...
    save_mode: type___SaveModeValue = ...

    @property
    def options(self) -> typing___MutableMapping[typing___Text, typing___Text]: ...

    def __init__(self,
        *,
        table : typing___Optional[typing___Text] = None,
        staging_bucket : typing___Optional[typing___Text] = None,
        result_column : typing___Optional[typing___Text] = None,
        save_mode : typing___Optional[type___SaveModeValue] = None,
        options : typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"options",b"options",u"result_column",b"result_column",u"save_mode",b"save_mode",u"staging_bucket",b"staging_bucket",u"table",b"table"]) -> None: ...
type___BigQuerySink = BigQuerySink

class GcsSink(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class OptionsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...
        value: typing___Text = ...

        def __init__(self,
            *,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> None: ...
    type___OptionsEntry = OptionsEntry

    format: type___FileFormatValue = ...
    uri: typing___Text = ...
    result_column: typing___Text = ...
    save_mode: type___SaveModeValue = ...

    @property
    def options(self) -> typing___MutableMapping[typing___Text, typing___Text]: ...

    def __init__(self,
        *,
        format : typing___Optional[type___FileFormatValue] = None,
        uri : typing___Optional[typing___Text] = None,
        result_column : typing___Optional[typing___Text] = None,
        save_mode : typing___Optional[type___SaveModeValue] = None,
        options : typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"format",b"format",u"options",b"options",u"result_column",b"result_column",u"save_mode",b"save_mode",u"uri",b"uri"]) -> None: ...
type___GcsSink = GcsSink
